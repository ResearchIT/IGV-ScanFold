# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: MacOS package

on:
  release:
    types: [published]
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
  workflow_dispatch:

jobs:
  build:

    runs-on: macos-10.15
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.12

    steps:
    - name: Install (macOS)
      if: runner.os == 'macOS'
      run: |
          brew update
          brew install ccache
          ccache --set-config=cache_dir=$HOME/.ccache

    # Caches for different branches are isolated, so we don't need to put the branch name into the key.
    # The total size for all caches in a repository is 5Gb.

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      run: |
        stamp=$(date '+%s')
        echo "${stamp}"
        echo "::set-output name=timestamp::${stamp}"

    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
         path: ~/.ccache
         key: macos-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
         restore-keys: |
           macos-ccache-

    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Apply patch
      run: ./scripts/apply_patch.sh
    - name: Bundle macos version
      run: ./macos/bundle_macos.sh

    - name: Upload a Build Artifact (non-release)
      uses: actions/upload-artifact@v2
      if: ${{ success() && github.event_name != 'release' }}
      with:
        name: IGV-ScanFold-macos
        path: ./build

    - name: Upload Release Asset (automatically on release)
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./IGV-ScanFold-macos.zip
        asset_name: IGV-ScanFold-macos-${{github.event.release.tag_name}}.zip
        asset_content_type: application/zip
      if: ${{ github.event_name == 'release' }}
