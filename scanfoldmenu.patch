diff --git a/src/main/java/org/broad/igv/track/TrackMenuUtils.java b/src/main/java/org/broad/igv/track/TrackMenuUtils.java
index bacce967b..aef2bd7b6 100644
--- a/src/main/java/org/broad/igv/track/TrackMenuUtils.java
+++ b/src/main/java/org/broad/igv/track/TrackMenuUtils.java
@@ -48,6 +48,7 @@ import org.broad.igv.sam.AlignmentDataManager;
 import org.broad.igv.sam.AlignmentTrack;
 import org.broad.igv.sam.CoverageTrack;
 import org.broad.igv.sam.SAMWriter;
+import org.broad.igv.scanfold.ScanFoldGui;
 import org.broad.igv.ui.*;
 import org.broad.igv.ui.action.OverlayTracksMenuAction;
 import org.broad.igv.ui.color.ColorUtilities;
@@ -485,6 +486,11 @@ public class TrackMenuUtils {
                 }
 
                 featurePopupMenu.add(getBlatItem(sequenceFeature));
+                
+                JMenuItem scanfoldItem = getScanfoldItem(f);
+                if (scanfoldItem != null) {
+                	featurePopupMenu.add(scanfoldItem);
+                }
             }
 
             if (Globals.isDevelopment() && FrameManager.isGeneListMode() && tracks.size() == 1) {
@@ -1499,5 +1505,52 @@ public class TrackMenuUtils {
         return item;
     }
 
+	public static JMenuItem getScanfoldItem(final Feature f) {
+		
+		if (f instanceof IGVFeature) {
+			
+			if (((IGVFeature) f).getExons() == null) {
+				return null;
+			}
+			
+			JMenuItem item = new JMenuItem("Run ScanFoldGui...");
+			item.addActionListener(new ActionListener() {
+
+				public void actionPerformed(ActionEvent evt) {
+					
+					IGVFeature igvf = (IGVFeature) f;
+					
+					Genome genome = GenomeManager.getInstance().getCurrentGenome();
+					final Strand strand = igvf.getStrand();
+					List<Exon> exons = igvf.getExons();
+					
+					Collections.sort(exons, new Comparator<Exon>() {
+		                public int compare(Exon arg0, Exon arg1) {
+		                	if (strand == Strand.NEGATIVE) {
+		                		return arg1.getStart() - arg0.getStart();
+		                	} else {
+		                		return arg0.getStart() - arg1.getStart();
+		                	}
+		                }
+		            });
+					
+					StringBuilder scanfoldSequence = new StringBuilder();
+					
+					for (Exon exon : exons) {
+						String sequence = ScanFoldGui.extractSequence(genome, exon.getChr(), exon.getStart(), exon.getEnd(), strand);
+						scanfoldSequence.append(sequence);
+					}
+
+					ScanFoldGui.launch(false, igvf.getName(), 0, scanfoldSequence.toString(), true);
+				}
+			});
+			return item;
+
+		} else {
+			return null;
+		}
+	}
+
+
 }
 
diff --git a/src/main/java/org/broad/igv/ui/IGVMenuBar.java b/src/main/java/org/broad/igv/ui/IGVMenuBar.java
index 98d84a952..e34d12c27 100644
--- a/src/main/java/org/broad/igv/ui/IGVMenuBar.java
+++ b/src/main/java/org/broad/igv/ui/IGVMenuBar.java
@@ -59,6 +59,8 @@ import org.broad.igv.util.HttpUtils;
 import org.broad.igv.util.LongRunningTask;
 import org.broad.igv.util.blat.BlatClient;
 import org.broad.igv.util.encode.EncodeFileBrowser;
+import org.broad.igv.feature.Strand;
+import org.broad.igv.scanfold.ScanFoldGui;
 
 import javax.swing.*;
 import javax.swing.event.MenuEvent;
@@ -172,6 +174,7 @@ public class IGVMenuBar extends JMenuBar implements IGVEventObserver {
         menus.add(createViewMenu());
         menus.add(createTracksMenu());
         menus.add(createRegionsMenu());
+        menus.add(createScanfoldMenu());
 
         refreshToolsMenu();
         menus.add(toolsMenu);
@@ -1185,4 +1188,22 @@ public class IGVMenuBar extends JMenuBar implements IGVEventObserver {
     public void disableReloadSession() {
         this.reloadSessionItem.setEnabled(false);
     }
+
+    private JMenu createScanfoldMenu() {
+        List<JComponent> menuItems = new ArrayList<JComponent>();
+        MenuAction extrasMenuAction = new MenuAction("ScanFold");
+        MenuAction menuAction = new MenuAction("Run ScanFoldGui...", null, 0) {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+            	final ReferenceFrame defaultFrame = FrameManager.getDefaultFrame();
+                String chr = defaultFrame.getChrName();
+                int start = (int) defaultFrame.getOrigin();
+                int end = (int) defaultFrame.getEnd();
+                String sequence = ScanFoldGui.extractSequence(igv.getGenomeManager().getCurrentGenome(), chr, start, end, Strand.NONE);
+                ScanFoldGui.launch(false, chr, start, sequence, false);
+            }
+        };
+        menuItems.add(MenuAndToolbarUtils.createMenuItem(menuAction));
+        return MenuAndToolbarUtils.createMenu(menuItems, extrasMenuAction);
+    }
 }
diff --git a/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java b/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
index f833da1b0..13234f088 100644
--- a/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
+++ b/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
@@ -35,6 +35,7 @@ import org.broad.igv.util.blat.BlatClient;
 import org.broad.igv.feature.RegionOfInterest;
 import org.broad.igv.feature.genome.Genome;
 import org.broad.igv.feature.genome.GenomeManager;
+import org.broad.igv.scanfold.ScanFoldGui;
 import org.broad.igv.ui.IGV;
 import org.broad.igv.util.LongRunningTask;
 import org.broad.igv.util.NamedRunnable;
@@ -199,7 +200,17 @@ public class RegionOfInterestPanel extends JPanel {
         item.addActionListener(e -> BlatClient.doBlatQuery(roi.getChr(), roi.getStart(), roi.getEnd(), Strand.NONE));
         popupMenu.add(item);
 
+        item = new JMenuItem("Run ScanFoldGui...");
+        item.addActionListener(new ActionListener() {
 
+            public void actionPerformed(ActionEvent e) {
+            	Genome genome = GenomeManager.getInstance().getCurrentGenome();
+            	String sequence = ScanFoldGui.extractSequence(genome, roi.getChr(), roi.getStart(), roi.getEnd(), Strand.NONE);
+            	ScanFoldGui.launch(false, roi.getChr(), roi.getStart(), sequence, false);
+            }
+        });
+        popupMenu.add(item);
+        
         popupMenu.add(new JSeparator());
 
         item = new JMenuItem("Delete");
