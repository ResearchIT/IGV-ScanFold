diff --git a/src/main/java/org/broad/igv/track/TrackLoader.java b/src/main/java/org/broad/igv/track/TrackLoader.java
index 1ee316457..64447ac86 100644
--- a/src/main/java/org/broad/igv/track/TrackLoader.java
+++ b/src/main/java/org/broad/igv/track/TrackLoader.java
@@ -76,6 +76,7 @@ import org.broad.igv.renderer.MutationRenderer;
 import org.broad.igv.renderer.PointsRenderer;
 import org.broad.igv.sam.*;
 import org.broad.igv.sam.reader.IndexNotFoundException;
+import org.broad.igv.scanfold.VarnaLoader;
 import org.broad.igv.tdf.TDFDataSource;
 import org.broad.igv.tdf.TDFReader;
 import org.broad.igv.ui.IGV;
@@ -210,6 +211,8 @@ public class TrackLoader {
                 loadMutFile(locator, newTracks, genome); // Must be tried before ".maf" test below
             } else if (typeString.endsWith(".maf")) {
                 loadMultipleAlignmentTrack(locator, newTracks, genome);
+            } else if (typeString.endsWith(".scanfoldvarna")) {
+                VarnaLoader.loadFofn(locator, genome);
             } else if (AttributeManager.isSampleInfoFile(locator)) {
                 // This might be a sample information file.
                 AttributeManager.getInstance().loadSampleInfo(locator);
diff --git a/src/main/java/org/broad/igv/ui/IGVMenuBar.java b/src/main/java/org/broad/igv/ui/IGVMenuBar.java
index af0e3127d..67da43ca4 100644
--- a/src/main/java/org/broad/igv/ui/IGVMenuBar.java
+++ b/src/main/java/org/broad/igv/ui/IGVMenuBar.java
@@ -59,6 +59,8 @@ import org.broad.igv.util.HttpUtils;
 import org.broad.igv.util.LongRunningTask;
 import org.broad.igv.util.blat.BlatClient;
 import org.broad.igv.util.encode.EncodeFileBrowser;
+import org.broad.igv.feature.Strand;
+import org.broad.igv.scanfold.ScanFoldGui;
 
 import javax.swing.*;
 import javax.swing.event.MenuEvent;
@@ -172,6 +174,7 @@ public class IGVMenuBar extends JMenuBar implements IGVEventObserver {
         menus.add(createViewMenu());
         menus.add(createTracksMenu());
         menus.add(createRegionsMenu());
+        menus.add(createScanfoldMenu());
 
         refreshToolsMenu();
         menus.add(toolsMenu);
@@ -1183,4 +1186,22 @@ public class IGVMenuBar extends JMenuBar implements IGVEventObserver {
     public void disableReloadSession() {
         this.reloadSessionItem.setEnabled(false);
     }
+
+    private JMenu createScanfoldMenu() {
+        List<JComponent> menuItems = new ArrayList<JComponent>();
+        MenuAction extrasMenuAction = new MenuAction("ScanFold");
+        MenuAction menuAction = new MenuAction("Run ScanFold...", null, 0) {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+            	final ReferenceFrame defaultFrame = FrameManager.getDefaultFrame();
+                String chr = defaultFrame.getChrName();
+                int start = (int) defaultFrame.getOrigin();
+                int end = (int) defaultFrame.getEnd();
+                String sequence = ScanFoldGui.extractSequence(igv.getGenomeManager().getCurrentGenome(), chr, start, end, Strand.NONE);
+                ScanFoldGui.launch(false, chr, start, sequence, false);
+            }
+        };
+        menuItems.add(MenuAndToolbarUtils.createMenuItem(menuAction));
+        return MenuAndToolbarUtils.createMenu(menuItems, extrasMenuAction);
+    }
 }
diff --git a/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java b/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
index 9181ea2b0..94fda698d 100644
--- a/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
+++ b/src/main/java/org/broad/igv/ui/panel/RegionOfInterestPanel.java
@@ -35,6 +35,7 @@ import org.broad.igv.util.blat.BlatClient;
 import org.broad.igv.feature.RegionOfInterest;
 import org.broad.igv.feature.genome.Genome;
 import org.broad.igv.feature.genome.GenomeManager;
+import org.broad.igv.scanfold.ScanFoldGui;
 import org.broad.igv.ui.IGV;
 import org.broad.igv.util.LongRunningTask;
 import org.broad.igv.util.NamedRunnable;
@@ -199,7 +200,17 @@ public class RegionOfInterestPanel extends JPanel {
         item.addActionListener(e -> BlatClient.doBlatQuery(roi.getChr(), roi.getStart(), roi.getEnd(), Strand.NONE));
         popupMenu.add(item);
 
+        item = new JMenuItem("Run ScanFold...");
+        item.addActionListener(new ActionListener() {
 
+            public void actionPerformed(ActionEvent e) {
+            	Genome genome = GenomeManager.getInstance().getCurrentGenome();
+            	String sequence = ScanFoldGui.extractSequence(genome, roi.getChr(), roi.getStart(), roi.getEnd(), Strand.NONE);
+            	ScanFoldGui.launch(false, roi.getChr(), roi.getStart(), sequence, false);
+            }
+        });
+        popupMenu.add(item);
+        
         popupMenu.add(new JSeparator());
 
         item = new JMenuItem("Delete");
